plugins {
	id 'org.springframework.boot' version '2.5.4' //Adds the Spring Boot plugin to be able to manage your app with Gradle
	id 'io.spring.dependency-management' version '1.0.11.RELEASE' //Adds Spring dependency management plugin to use the compatible dependencies with the Spring Boot version
	id 'java'//Adds the Java plugin to help Gradle to manage our app lifecyle


}

group = 'com.example'//Project id and versions
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '8'

repositories {//Tell Gradle where it will find all libraries
	mavenCentral()
}

dependencies {//This block contains all dependencies used by our app. Some dependencies can be used
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // libs to use JPA in your project
	implementation 'com.h2database:h2' // libs to use a H2 database
	implementation 'org.springframework.boot:spring-boot-starter-web'//always (7) spring-boot-starter-web
	developmentOnly 'org.springframework.boot:spring-boot-devtools'//only in dev (8) spring-boot-devtools
	testImplementation 'org.springframework.boot:spring-boot-starter-test'//only in test (9) spring-boot-starter-test : we exclude vintage junit library. This starter works with the last version and the vintage version, but the vintage version will be deleted in next release
	implementation 'io.springfox:springfox-boot-starter:3.0.0'
}

test {
	useJUnitPlatform()
}
